import "../../static/fonts/MERIFONT.ttf";

import { Button, VerticalBox } from "std-widgets.slint";

struct TileData {
    kind: string,
}

component Tile inherits Rectangle {
    in property <bool> tile-color;
    in-out property <string> kind;
    background: tile-color ? #ebecd0 : #969696;
    Text {
        font-size: 64px;
        font-family: "Chess Merida";
        color: #000000;
        text: kind;
    }
}

export component ChessBoard {
    private property <length> tile_size: 80px;
    private property <int> columns: 8;
    private property <int> rows: 8;

    width: tile_size * columns;
    height: tile_size * columns;

    in property <[[TileData]]> tiles: [
        [
            { kind:"t" },
            { kind:"m" },
            { kind:"v" },
            { kind:"w" },
            { kind:"l" },
            { kind:"v" },
            { kind:"m" },
            { kind:"t" }
        ],
        [
            { kind:"o" },
            { kind:"o" },
            { kind:"o" },
            { kind:"o" },
            { kind:"o" },
            { kind:"o" },
            { kind:"o" },
            { kind:"o" }
        ],
        [{ }, { }, { }, { }, { }, { }, { }, { }],
        [{ }, { }, { }, { }, { }, { }, { }, { }],
        [{ }, { }, { }, { }, { }, { }, { }, { }],
        [{ }, { }, { }, { }, { }, { }, { }, { }],
        [
            { kind:"p" },
            { kind:"p" },
            { kind:"p" },
            { kind:"p" },
            { kind:"p" },
            { kind:"p" },
            { kind:"p" },
            { kind:"p" }
        ],
        [
            { kind:"r" },
            { kind:"n" },
            { kind:"b" },
            { kind:"q" },
            { kind:"k" },
            { kind:"b" },
            { kind:"n" },
            { kind:"r" }
        ]
    ];
    for row[row_i] in tiles: TouchArea {
        for column[col_i] in row: Tile {
            x: col_i * tile_size;
            y: row_i * tile_size;
            tile-color: mod((row_i + col_i), 2) == 0;
            width: tile_size;
            height: tile_size;
            kind: column.kind;
        }
    }
}
